name: CI for AI

# This workflow tests Copilot's development practices by:
# 1. Creating dynamic comments on PRs to trigger Copilot sessions with new feature requests
# 2. Validating that proper development practices are followed
# 3. Supporting incremental quote feature requests (--quote-1, --quote-2, etc.)
#
# The workflow automatically detects existing quote feature requests and asks for the next one,
# ensuring Copilot has to build something new each time rather than repeating the same feature.

on:
  schedule:
    # Daily at 06:00 UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  create-test-comment:
    # Create dynamic comment requesting next incremental quote feature
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create CI/AI test comment
        id: create-comment
        env:
          GITHUB_TOKEN: ${{ secrets.GH_AUTOMATION_TOKEN }}
        run: |
          PR_NUMBER=3
          
          # Fetch existing comments to determine next quote number
          echo "🔍 Fetching existing comments to determine next quote number..."
          COMMENTS_RESPONSE=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments")

          # Extract quote numbers from existing comments and find the highest one
          EXISTING_QUOTES=$(echo "$COMMENTS_RESPONSE" | jq -r '.[].body' | grep -oE '\-\-quote\-[0-9]+' | grep -oE '[0-9]+' | sort -n | tail -1)
          
          # If no quotes found, start with 1, otherwise increment
          if [ -z "$EXISTING_QUOTES" ]; then
            NEXT_QUOTE_NUM=1
          else
            NEXT_QUOTE_NUM=$((EXISTING_QUOTES + 1))
          fi
          
          echo "📊 Found highest existing quote number: ${EXISTING_QUOTES:-none}"
          echo "🎯 Next quote number will be: $NEXT_QUOTE_NUM"
          
          # Create comment body with the next quote number
          COMMENT_BODY="@copilot please create a new feature to support a \"--quote-$NEXT_QUOTE_NUM\" argument which prints a famous quote. This should be invoked like \`sbt \"helloWorld/run --quote-$NEXT_QUOTE_NUM\"\` and display an inspiring or famous quote."

          # Create the comment using proper JSON formatting with jq
          COMMENT_PAYLOAD=$(jq -n \
            --arg body "$COMMENT_BODY" \
            '{
              body: $body
            }')

          COMMENT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
            -d "$COMMENT_PAYLOAD")

          COMMENT_ID=$(echo "$COMMENT_RESPONSE" | jq -r '.id')
          
          # Check if comment creation was successful
          if [ "$COMMENT_ID" = "null" ] || [ -z "$COMMENT_ID" ]; then
            echo "❌ Failed to create comment. API response:"
            echo "$COMMENT_RESPONSE"
            exit 1
          fi
          
          echo "✅ Created comment #$COMMENT_ID on PR #$PR_NUMBER requesting --quote-$NEXT_QUOTE_NUM feature"
          echo "comment-id=$COMMENT_ID" >> $GITHUB_OUTPUT
          echo "quote-number=$NEXT_QUOTE_NUM" >> $GITHUB_OUTPUT
