name: CI for AI

# This workflow tests Copilot's development practices by:
# 1. Creating comments on PRs to trigger Copilot sessions
# 2. Validating that proper development practices are followed
# 3. Supporting both reusable PR (default) and fresh PR modes
#
# Fresh PR Mode: Prevents context contamination by creating isolated test PRs
# Reusable PR Mode: Uses PR #327 for operational simplicity

on:
  schedule:
    # Daily at 06:00 UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  create-test-comment:
    # Only create comment on schedule or manual dispatch without comment_id
    runs-on: ubuntu-latest
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id || steps.set-output.outputs.comment-id }}
      comment-created: ${{ steps.create-comment.outputs.comment-id != '' && steps.create-comment.outputs.comment-id != null }}
      pr-number: ${{ steps.set-pr.outputs.pr-number }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create CI/AI test comment
        id: create-comment
        env:
          GITHUB_TOKEN: ${{ secrets.GH_AUTOMATION_TOKEN }}
        run: |
          PR_NUMBER=3
          
          COMMENT_BODY="@copilot please create a new feature to support a "--help" argument which will explain the usage and arguments for this CLI application."

          # Create the comment using proper JSON formatting with jq
          COMMENT_PAYLOAD=$(jq -n \
            --arg body "$COMMENT_BODY" \
            '{
              body: $body
            }')

          COMMENT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
            -d "$COMMENT_PAYLOAD")

          COMMENT_ID=$(echo "$COMMENT_RESPONSE" | jq -r '.id')
          
          # Check if comment creation was successful
          if [ "$COMMENT_ID" = "null" ] || [ -z "$COMMENT_ID" ]; then
            echo "❌ Failed to create comment. API response:"
            echo "$COMMENT_RESPONSE"
            exit 1
          fi
          
          echo "✅ Created comment #$COMMENT_ID on PR #$PR_NUMBER"
          echo "comment-id=$COMMENT_ID" >> $GITHUB_OUTPUT
